-- ===== JUMP BOOST POWER-UP SCRIPT =====
-- Place this script inside jump boost power-up parts as a SERVER SCRIPT
-- This gives players temporary jump height increases

local jumpBoost = script.Parent
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

-- Power-up settings
local JUMP_MULTIPLIER = 2.5
local BOOST_DURATION = 15
local RESPAWN_TIME = 25

-- Make power-up look appealing
jumpBoost.BrickColor = BrickColor.new("Bright green")
jumpBoost.Material = Enum.Material.Neon
jumpBoost.Shape = Enum.PartType.Ball
jumpBoost.Size = Vector3.new(6, 6, 6)

-- Add special lighting effect
local bounceLight = Instance.new("PointLight")
bounceLight.Parent = jumpBoost
bounceLight.Color = Color3.new(0, 1, 0.5)
bounceLight.Brightness = 2
bounceLight.Range = 15

-- Create pulsing animation
local pulseTween = TweenService:Create(
    bounceLight,
    TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
    {Brightness = 4}
)
pulseTween:Play()

-- Bouncing animation
local originalPosition = jumpBoost.Position
local bounceTween = TweenService:Create(
    jumpBoost,
    TweenInfo.new(1, Enum.EasingStyle.Bounce, Enum.EasingDirection.InOut, -1, true),
    {Position = originalPosition + Vector3.new(0, 4, 0)}
)
bounceTween:Play()

-- Power-up collection function
local function onTouch(hit)
    local humanoid = hit.Parent:FindFirstChild("Humanoid")
    if humanoid and jumpBoost.Transparency == 0 then
        local player = Players:GetPlayerFromCharacter(hit.Parent)
        if player then
            
            -- Apply jump boost
            local originalJumpPower = humanoid.JumpPower
            humanoid.JumpPower = originalJumpPower * JUMP_MULTIPLIER
            
            -- Create jump effect particles
            local character = player.Character
            local jumpEffect = Instance.new("ParticleEmitter")
            jumpEffect.Parent = character:FindFirstChild("HumanoidRootPart")
            jumpEffect.Texture = "rbxasset://textures/particles/fire_main.dds"
            jumpEffect.Color = ColorSequence.new(Color3.new(0, 1, 0.5))
            jumpEffect.Lifetime = NumberRange.new(0.8, 1.2)
            jumpEffect.Rate = 30
            jumpEffect.SpreadAngle = Vector2.new(45, 45)
            jumpEffect.Speed = NumberRange.new(5, 15)
            
            -- Visual feedback
            local collectTween = TweenService:Create(
                jumpBoost,
                TweenInfo.new(0.5, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out),
                {Size = Vector3.new(0, 0, 0), Transparency = 1}
            )
            collectTween:Play()
            
            -- Hide power-up
            jumpBoost.CanCollide = false
            
            print(player.Name .. " got jump boost!")
            
            -- Remove boost after duration
            wait(BOOST_DURATION)
            humanoid.JumpPower = originalJumpPower
            if jumpEffect then
                jumpEffect:Destroy()
            end
            
            print(player.Name .. "'s jump boost ended")
            
            -- Respawn power-up
            wait(RESPAWN_TIME - BOOST_DURATION)
            jumpBoost.Transparency = 0
            jumpBoost.Size = Vector3.new(6, 6, 6)
            jumpBoost.CanCollide = true
        end
    end
end

-- Connect the touch event
jumpBoost.Touched:Connect(onTouch)

print("Jump Boost script loaded for:", jumpBoost.Name)
